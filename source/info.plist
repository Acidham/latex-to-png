<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>bundleid</key>
	<string>com.apple.alfred.workflow.latexmath</string>
	<key>category</key>
	<string>Productivity</string>
	<key>connections</key>
	<dict>
		<key>2D31F9B9-3944-47B6-90FB-C3D644CE048E</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>CF4B3A9C-0980-42E1-BBC2-88877835E5CA</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
			<dict>
				<key>destinationuid</key>
				<string>A4B94DD4-7786-4BA2-AC7A-9496A111DF97</string>
				<key>modifiers</key>
				<integer>1048576</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
			<dict>
				<key>destinationuid</key>
				<string>AEB09C58-77CD-4913-9704-34FB5EBC2A99</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>3AEB3F40-5C4B-4696-AAF7-979992CD7057</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>2D31F9B9-3944-47B6-90FB-C3D644CE048E</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>524C2F19-4633-4F38-AADD-2161D3E60D86</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>B56FD831-799A-4446-BBC6-956BBB54AB84</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>A4B94DD4-7786-4BA2-AC7A-9496A111DF97</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>C9DB0A21-6CDC-498B-87B8-2BE216AEA1B3</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>B56FD831-799A-4446-BBC6-956BBB54AB84</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>E081DB18-5F75-4657-BAC7-B8CB8DEEF8F0</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>sourceoutputuid</key>
				<string>D2F06D73-D9A7-4050-8291-8986FD86EE7C</string>
				<key>vitoclose</key>
				<false/>
			</dict>
			<dict>
				<key>destinationuid</key>
				<string>76093E45-FE6D-4ABF-AF76-95A6EF4BB9A1</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>B70962B1-1530-4F28-8B4F-D7DA7C01A6F4</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>BB88A97F-0BE9-49EF-B597-CFB4835AAE8D</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>CF4B3A9C-0980-42E1-BBC2-88877835E5CA</key>
		<array/>
		<key>E081DB18-5F75-4657-BAC7-B8CB8DEEF8F0</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>2D31F9B9-3944-47B6-90FB-C3D644CE048E</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
	</dict>
	<key>createdby</key>
	<string>Acidham</string>
	<key>description</key>
	<string>Generate PNG from LaTex markup</string>
	<key>disabled</key>
	<false/>
	<key>name</key>
	<string>LaTexMath to PNG</string>
	<key>objects</key>
	<array>
		<dict>
			<key>config</key>
			<dict>
				<key>triggerid</key>
				<string>.tex</string>
			</dict>
			<key>type</key>
			<string>alfred.workflow.trigger.external</string>
			<key>uid</key>
			<string>3AEB3F40-5C4B-4696-AAF7-979992CD7057</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>lastpathcomponent</key>
				<false/>
				<key>onlyshowifquerypopulated</key>
				<false/>
				<key>removeextension</key>
				<false/>
				<key>text</key>
				<string>PNG was added to your Downloads folder and Formular was added to the Clipboard</string>
				<key>title</key>
				<string>LaTeX Math</string>
			</dict>
			<key>type</key>
			<string>alfred.workflow.output.notification</string>
			<key>uid</key>
			<string>BB88A97F-0BE9-49EF-B597-CFB4835AAE8D</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>alfredfiltersresults</key>
				<false/>
				<key>alfredfiltersresultsmatchmode</key>
				<integer>0</integer>
				<key>argumenttreatemptyqueryasnil</key>
				<false/>
				<key>argumenttrimmode</key>
				<integer>0</integer>
				<key>argumenttype</key>
				<integer>0</integer>
				<key>escaping</key>
				<integer>68</integer>
				<key>keyword</key>
				<string>tex</string>
				<key>queuedelaycustom</key>
				<integer>3</integer>
				<key>queuedelayimmediatelyinitially</key>
				<true/>
				<key>queuedelaymode</key>
				<integer>1</integer>
				<key>queuemode</key>
				<integer>1</integer>
				<key>runningsubtext</key>
				<string>Processing...</string>
				<key>script</key>
				<string>on run argv	-- enter new latex signs here	set theShortcuts to {"*|\\cdot", "--|\\over", "√|\\sqrt", "∑|\\sum", "alpha|\\alpha", "beta|\\beta"}		set theQuery to item 1 of argv		-- Load JSON encoder	set theJsonPath to POSIX file ((do shell script "pwd") &amp; "/json.scpt")	set json to load script theJsonPath as alias		set thePreviewURL to "https://latex.codecogs.com/png.latex?%5Cfn_jvn%20" &amp; urlEncode(theQuery)	set theCurl to "curl -go /tmp/tex.png " &amp; thePreviewURL	do shell script (theCurl)		set theItems to {}		set theItem to json's createDictWith({{"title", "Get/Preview PNG"}})	theItem's setkv("subtitle", "Generate Image or press SHIFT to Preview")	theItem's setkv("arg", "getPNG|" &amp; theQuery)	theItem's setkv("quicklookurl", "/tmp/tex.png")		-- CMD mod for get img url entry	set theCMD to json's createDictWith({{"valid", "true"}})	theCMD's setkv("arg", thePreviewURL)	theCMD's setkv("subtitle", "Get img url")		set theIcon to json's createDictWith({{"type", "image"}})	theIcon's setkv("path", "edit.png")	theItem's setkv("icon", theIcon)		set theMod to json's createDictWith({{"cmd", theCMD}})	theItem's setkv("mods", theMod)		set end of theItems to theItem		repeat with i in theShortcuts				set {theKey, theValue} to StringSplit(i, "|")				set theItem to json's createDictWith({{"title", theKey}})		theItem's setkv("subtitle", theValue)		theItem's setkv("arg", theQuery &amp; " " &amp; theValue &amp; " ")		--		theItem's setkv("quicklookurl", "")				set theIcon to json's createDictWith({{"type", "image"}})		theIcon's setkv("path", "math.png")		theItem's setkv("icon", theIcon)				set end of theItems to theItem			end repeat		-- Create root items object and encode to JSON	set itemDict to json's createDict()	itemDict's setkv("items", theItems)		return json's encode(itemDict)	return theQueryend run(* ================================================================
FUNTION: Splits a String with a given delimiter
RETURNS: List of String  (List)
==================================================================*)on StringSplit(theString, theDelimiter)	-- save delimiters to restore old settings	set oldDelimiters to AppleScript's text item delimiters	-- set delimiters to delimiter to be used	set AppleScript's text item delimiters to theDelimiter	-- create the array	set theArray to every text item of theString	-- restore the old setting	set AppleScript's text item delimiters to oldDelimiters	-- return the result	return theArrayend StringSplit(* ===============================
Encode URL
RETURNS: Encoded URL or error string
==================================*)on urlEncode(str)	local str	try		return (do shell script "/bin/echo " &amp; quoted form of str &amp; " | perl -MURI::Escape -lne 'print uri_escape($_)'")	on error eMsg number eNum		error "Can't urlEncode: " &amp; eMsg number eNum	end tryend urlEncode</string>
				<key>scriptargtype</key>
				<integer>1</integer>
				<key>scriptfile</key>
				<string></string>
				<key>subtext</key>
				<string>Formulate a LaTex math equation</string>
				<key>title</key>
				<string>Generates a PNG from LaTexMath equation</string>
				<key>type</key>
				<integer>6</integer>
				<key>withspace</key>
				<true/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.input.scriptfilter</string>
			<key>uid</key>
			<string>2D31F9B9-3944-47B6-90FB-C3D644CE048E</string>
			<key>version</key>
			<integer>3</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>concurrently</key>
				<false/>
				<key>escaping</key>
				<integer>68</integer>
				<key>script</key>
				<string>on run argv	set theQuery to item 1 of argv		if theQuery starts with "getPNG" then				set {theAction, theFormula} to StringSplit(theQuery, "|")				do shell script ("yes | cp /tmp/tex.png ~/Downloads/LatexEquation.png")		do shell script ("open ~/Downloads/LatexEquation.png")		tell application "Alfred 4" to run trigger ".texnotify" in workflow "com.apple.alfred.workflow.latexmath" with argument ""		tell application "Finder" to set the clipboard to theFormula			else		tell application "Alfred 4" to run trigger ".tex" in workflow "com.apple.alfred.workflow.latexmath" with argument theQuery			end if	end run(* ================================================================
FUNTION: Splits a String with a given delimiter
RETURNS: List of String  (List)
==================================================================*)on StringSplit(theString, theDelimiter)	-- save delimiters to restore old settings	set oldDelimiters to AppleScript's text item delimiters	-- set delimiters to delimiter to be used	set AppleScript's text item delimiters to theDelimiter	-- create the array	set theArray to every text item of theString	-- restore the old setting	set AppleScript's text item delimiters to oldDelimiters	-- return the result	return theArrayend StringSplit</string>
				<key>scriptargtype</key>
				<integer>1</integer>
				<key>scriptfile</key>
				<string></string>
				<key>type</key>
				<integer>6</integer>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.script</string>
			<key>uid</key>
			<string>CF4B3A9C-0980-42E1-BBC2-88877835E5CA</string>
			<key>version</key>
			<integer>2</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>triggerid</key>
				<string>.texnotify</string>
			</dict>
			<key>type</key>
			<string>alfred.workflow.trigger.external</string>
			<key>uid</key>
			<string>B70962B1-1530-4F28-8B4F-D7DA7C01A6F4</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>concurrently</key>
				<false/>
				<key>escaping</key>
				<integer>102</integer>
				<key>script</key>
				<string>python parseurl.py $1</string>
				<key>scriptargtype</key>
				<integer>1</integer>
				<key>scriptfile</key>
				<string></string>
				<key>type</key>
				<integer>0</integer>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.script</string>
			<key>uid</key>
			<string>E081DB18-5F75-4657-BAC7-B8CB8DEEF8F0</string>
			<key>version</key>
			<integer>2</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>lastpathcomponent</key>
				<false/>
				<key>onlyshowifquerypopulated</key>
				<false/>
				<key>removeextension</key>
				<false/>
				<key>text</key>
				<string>{query}</string>
				<key>title</key>
				<string>URL Copied to the Clipboard</string>
			</dict>
			<key>type</key>
			<string>alfred.workflow.output.notification</string>
			<key>uid</key>
			<string>C9DB0A21-6CDC-498B-87B8-2BE216AEA1B3</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>autopaste</key>
				<false/>
				<key>clipboardtext</key>
				<string>{query}</string>
				<key>transient</key>
				<false/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.output.clipboard</string>
			<key>uid</key>
			<string>A4B94DD4-7786-4BA2-AC7A-9496A111DF97</string>
			<key>version</key>
			<integer>3</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>argumenttype</key>
				<integer>0</integer>
				<key>keyword</key>
				<string>rtex</string>
				<key>subtext</key>
				<string>Extract math equation from encode URL</string>
				<key>text</key>
				<string>Reverse Latex URL</string>
				<key>withspace</key>
				<true/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.input.keyword</string>
			<key>uid</key>
			<string>524C2F19-4633-4F38-AADD-2161D3E60D86</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>lastpathcomponent</key>
				<false/>
				<key>onlyshowifquerypopulated</key>
				<false/>
				<key>removeextension</key>
				<false/>
				<key>text</key>
				<string>Enter latex.codecogs.com URL with encoded math equation incl http</string>
				<key>title</key>
				<string>ERROR</string>
			</dict>
			<key>type</key>
			<string>alfred.workflow.output.notification</string>
			<key>uid</key>
			<string>76093E45-FE6D-4ABF-AF76-95A6EF4BB9A1</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>conditions</key>
				<array>
					<dict>
						<key>inputstring</key>
						<string></string>
						<key>matchcasesensitive</key>
						<false/>
						<key>matchmode</key>
						<integer>4</integer>
						<key>matchstring</key>
						<string>^http</string>
						<key>outputlabel</key>
						<string>encoding</string>
						<key>uid</key>
						<string>D2F06D73-D9A7-4050-8291-8986FD86EE7C</string>
					</dict>
				</array>
				<key>elselabel</key>
				<string>error</string>
			</dict>
			<key>type</key>
			<string>alfred.workflow.utility.conditional</string>
			<key>uid</key>
			<string>B56FD831-799A-4446-BBC6-956BBB54AB84</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>concurrently</key>
				<false/>
				<key>escaping</key>
				<integer>0</integer>
				<key>script</key>
				<string># THESE VARIABLES MUST BE SET. SEE THE ONEUPDATER README FOR AN EXPLANATION OF EACH.
readonly remote_info_plist="https://raw.githubusercontent.com/Acidham/latex-to-png/master/source/info.plist"
readonly workflow_url="https://raw.githubusercontent.com/Acidham/latex-to-png/master/LaTexMath%20to%20PNG.alfredworkflow"
readonly download_type='direct'
readonly frequency_check='4'

# FROM HERE ON, CODE SHOULD BE LEFT UNTOUCHED!
function abort {
  echo "${1}" &gt;&amp;2
  exit 1
}

function url_exists {
  curl --silent --location --output /dev/null --fail --range 0-0 "${1}"
}

function notification {
  readonly local notificator="$(find . -type d -name 'Notificator.app')"
  if [[ -n "${notificator}" ]]; then
    "${notificator}/Contents/Resources/Scripts/notificator" --message "${1}" --title "${alfred_workflow_name}" --subtitle 'A new version is available'
    return
  fi

  readonly local terminal_notifier="$(find . -type f -name 'terminal-notifier')"
  if [[ -n "${terminal_notifier}" ]]; then
    "${terminal_notifier}" -title "${alfred_workflow_name}" -subtitle 'A new version is available' -message "${1}"
    return
  fi

  osascript -e "display notification \"${1}\" with title \"${alfred_workflow_name}\" subtitle \"A new version is available\""
}

# Local sanity checks
readonly local_info_plist='info.plist'
readonly local_version="$(/usr/libexec/PlistBuddy -c 'print version' "${local_info_plist}")"

[[ -n "${local_version}" ]] || abort 'You need to set a workflow version in the configuration sheet.'
[[ "${download_type}" =~ ^(direct|page|github_release)$ ]] || abort "'download_type' (${download_type}) needs to be one of 'direct', 'page', or 'github_release'."
[[ "${frequency_check}" =~ ^[0-9]+$ ]] || abort "'frequency_check' (${frequency_check}) needs to be a number."

# Check for updates
if [[ $(find "${local_info_plist}" -mtime +"${frequency_check}"d) ]]; then
  if ! url_exists "${remote_info_plist}"; then abort "'remote_info_plist' (${remote_info_plist}) appears to not be reachable."; fi # Remote sanity check

  readonly tmp_file="$(mktemp)"
  curl --silent --location --output "${tmp_file}" "${remote_info_plist}"
  readonly remote_version="$(/usr/libexec/PlistBuddy -c 'print version' "${tmp_file}")"

  if [[ "${local_version}" == "${remote_version}" ]]; then
    touch "${local_info_plist}" # Reset timer by touching local file
    exit 0
  fi

  if [[ "${download_type}" == 'page' ]]; then
    notification 'Opening download page…'
    open "${workflow_url}"
    exit 0
  fi

  download_url="$([[ "${download_type}" == 'github_release' ]] &amp;&amp; curl --silent "https://api.github.com/repos/${workflow_url}/releases/latest" | grep 'browser_download_url' | head -1 | sed -E 's/.*browser_download_url": "(.*)"/\1/' || echo "${workflow_url}")"

  if url_exists "${download_url}"; then
    notification 'Downloading and installing…'
    curl --silent --location --output "${HOME}/Downloads/${alfred_workflow_name}.alfredworkflow" "${download_url}"
    open "${HOME}/Downloads/${alfred_workflow_name}.alfredworkflow"
  else
    abort "'workflow_url' (${download_url}) appears to not be reachable."
  fi
fi</string>
				<key>scriptargtype</key>
				<integer>1</integer>
				<key>scriptfile</key>
				<string></string>
				<key>type</key>
				<integer>0</integer>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.script</string>
			<key>uid</key>
			<string>AEB09C58-77CD-4913-9704-34FB5EBC2A99</string>
			<key>version</key>
			<integer>2</integer>
		</dict>
	</array>
	<key>readme</key>
	<string>Uses: https://latex.codecogs.com</string>
	<key>uidata</key>
	<dict>
		<key>2D31F9B9-3944-47B6-90FB-C3D644CE048E</key>
		<dict>
			<key>xpos</key>
			<integer>505</integer>
			<key>ypos</key>
			<integer>55</integer>
		</dict>
		<key>3AEB3F40-5C4B-4696-AAF7-979992CD7057</key>
		<dict>
			<key>xpos</key>
			<integer>40</integer>
			<key>ypos</key>
			<integer>55</integer>
		</dict>
		<key>524C2F19-4633-4F38-AADD-2161D3E60D86</key>
		<dict>
			<key>xpos</key>
			<integer>45</integer>
			<key>ypos</key>
			<integer>390</integer>
		</dict>
		<key>76093E45-FE6D-4ABF-AF76-95A6EF4BB9A1</key>
		<dict>
			<key>xpos</key>
			<integer>1120</integer>
			<key>ypos</key>
			<integer>405</integer>
		</dict>
		<key>A4B94DD4-7786-4BA2-AC7A-9496A111DF97</key>
		<dict>
			<key>xpos</key>
			<integer>780</integer>
			<key>ypos</key>
			<integer>260</integer>
		</dict>
		<key>AEB09C58-77CD-4913-9704-34FB5EBC2A99</key>
		<dict>
			<key>colorindex</key>
			<integer>12</integer>
			<key>note</key>
			<string>OneUpdater</string>
			<key>xpos</key>
			<integer>780</integer>
			<key>ypos</key>
			<integer>570</integer>
		</dict>
		<key>B56FD831-799A-4446-BBC6-956BBB54AB84</key>
		<dict>
			<key>xpos</key>
			<integer>195</integer>
			<key>ypos</key>
			<integer>410</integer>
		</dict>
		<key>B70962B1-1530-4F28-8B4F-D7DA7C01A6F4</key>
		<dict>
			<key>xpos</key>
			<integer>925</integer>
			<key>ypos</key>
			<integer>55</integer>
		</dict>
		<key>BB88A97F-0BE9-49EF-B597-CFB4835AAE8D</key>
		<dict>
			<key>xpos</key>
			<integer>1120</integer>
			<key>ypos</key>
			<integer>55</integer>
		</dict>
		<key>C9DB0A21-6CDC-498B-87B8-2BE216AEA1B3</key>
		<dict>
			<key>xpos</key>
			<integer>1120</integer>
			<key>ypos</key>
			<integer>260</integer>
		</dict>
		<key>CF4B3A9C-0980-42E1-BBC2-88877835E5CA</key>
		<dict>
			<key>colorindex</key>
			<integer>3</integer>
			<key>note</key>
			<string>- Call external .tex in case new LaTeX symbol was added
- Calls external trigger .gotex to save PNG</string>
			<key>xpos</key>
			<integer>775</integer>
			<key>ypos</key>
			<integer>55</integer>
		</dict>
		<key>E081DB18-5F75-4657-BAC7-B8CB8DEEF8F0</key>
		<dict>
			<key>note</key>
			<string>Decode entered URL</string>
			<key>xpos</key>
			<integer>355</integer>
			<key>ypos</key>
			<integer>175</integer>
		</dict>
	</dict>
	<key>variablesdontexport</key>
	<array/>
	<key>version</key>
	<string>1.7</string>
	<key>webaddress</key>
	<string>https://github.com/Acidham/latex-to-png</string>
</dict>
</plist>
